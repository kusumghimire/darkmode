{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\dark-mode\\\\src\\\\ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppContainer from './common/containers/App';\nimport Routes from './routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst themeReducer = (mode, action) => {\n  switch (action.type) {\n    case \"LIGHTMODE\":\n      return {\n        darkMode: false\n      };\n\n    case \"DARKMODE\":\n      return {\n        darkMode: true\n      };\n\n    default:\n      return mode;\n  }\n};\n\nconst initialState = {\n  darkMode: false // JSON.parse(localStorage.getItem(\"DARKMODE\"))||LIGHTMODE;\n\n};\nexport function ThemeProvider(props) {\n  _s();\n\n  const [mode, dispatch] = useReducer(themeReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(\"DARKMODE\", JSON.stringify(mode));\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      dispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemeProvider, \"4v3/kIBnTjrbI7854pmCK2pqt6g=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/dark-mode/src/ThemeContext.js"],"names":["React","createContext","useReducer","useEffect","AppContainer","Routes","ThemeContext","themeReducer","mode","action","type","darkMode","initialState","ThemeProvider","props","dispatch","localStorage","setItem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA2D,OAA3D;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,EAAlC;;AAIP,MAAMM,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF,SAAK,UAAL;AACE,aAAO;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF;AACE,aAAOH,IAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,YAAY,GAClB;AACED,EAAAA,QAAQ,EAAE,KADZ,CAEE;;AAFF,CADA;AAMA,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACnC,QAAM,CAACN,IAAD,EAAOO,QAAP,IAAmBb,UAAU,CAACK,YAAD,EAAeK,YAAf,CAAnC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAjC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAF;AAAQO,MAAAA;AAAR,KAA9B;AAAA,2BACL,QAAC,YAAD;AAAA,6BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD;;GAXeF,a;;KAAAA,a","sourcesContent":["import React, { createContext, useReducer ,useEffect} from \"react\";\r\nimport AppContainer from './common/containers/App';\r\nimport Routes from './routes';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\n\r\n\r\nconst themeReducer = (mode, action) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { darkMode: false };\r\n    case \"DARKMODE\":\r\n      return { darkMode: true };\r\n    default:\r\n      return mode;\r\n  }\r\n};\r\n\r\nconst initialState = \r\n{\r\n  darkMode: false,\r\n  // JSON.parse(localStorage.getItem(\"DARKMODE\"))||LIGHTMODE;\r\n};\r\n\r\nexport function ThemeProvider(props) {\r\n  const [mode, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"DARKMODE\", JSON.stringify(mode));\r\n  }, [mode]);\r\n  return <ThemeContext.Provider value={{ mode, dispatch }}>\r\n    <AppContainer>\r\n         <Routes />\r\n      </AppContainer>\r\n    </ThemeContext.Provider>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}