{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\dark-mode\\\\src\\\\ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppContainer from './common/containers/App';\nimport Routes from './routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst themeReducer = (mode, action) => {\n  switch (action.type) {\n    case \"LIGHTMODE\":\n      localStorage.theme = 'LIGHTMODE';\n      return {\n        darkMode: false\n      };\n\n    case \"DARKMODE\":\n      localStorage.theme = 'DARKMODE';\n      return {\n        darkMode: true\n      };\n\n    default:\n      return mode;\n  }\n};\n\nconst mode = localStorage.theme;\nconst initialState = {\n  darkMode: Boolean(mode === 'DARKMODE')\n};\nexport function ThemeProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemeProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/dark-mode/src/ThemeContext.js"],"names":["React","createContext","useReducer","AppContainer","Routes","ThemeContext","themeReducer","mode","action","type","localStorage","theme","darkMode","initialState","Boolean","ThemeProvider","props","state","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEP,MAAMK,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACEC,MAAAA,YAAY,CAACC,KAAb,GAAqB,WAArB;AACA,aAAO;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF,SAAK,UAAL;AACEF,MAAAA,YAAY,CAACC,KAAb,GAAqB,UAArB;AACA,aAAO;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF;AACE,aAAOL,IAAP;AARJ;AAUD,CAXD;;AAaA,MAAMA,IAAI,GAAGG,YAAY,CAACC,KAA1B;AAEA,MAAME,YAAY,GAAG;AACnBD,EAAAA,QAAQ,EAAEE,OAAO,CAACP,IAAI,KAAK,UAAV;AADE,CAArB;AAIA,OAAO,SAASQ,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACI,YAAD,EAAeO,YAAf,CAApC;AAEA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA,2BACL,QAAC,YAAD;AAAA,6BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD;;GAReH,a;;KAAAA,a","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppContainer from './common/containers/App';\r\nimport Routes from './routes';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst themeReducer = (mode, action) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      localStorage.theme = 'LIGHTMODE';\r\n      return { darkMode: false };\r\n    case \"DARKMODE\":\r\n      localStorage.theme = 'DARKMODE'\r\n      return { darkMode: true };\r\n    default:\r\n      return mode;\r\n  }\r\n};\r\n\r\nconst mode = localStorage.theme;\r\n\r\nconst initialState = {\r\n  darkMode: Boolean(mode === 'DARKMODE'),\r\n};\r\n\r\nexport function ThemeProvider(props) {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>\r\n    <AppContainer>\r\n         <Routes />\r\n      </AppContainer>\r\n    </ThemeContext.Provider>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}